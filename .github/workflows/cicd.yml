name: CICD

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: [ubuntu-latest]
    steps:
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key:
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
            # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Checkout Source
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Dependencies
        run: npm install
      - name: Build Project
        run: npm run build
      - name: Genrate Deployment Package
        run: zip -r filesure-next.zip .next pages public styles *.json *.js *.ts
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: 'filesure-next-app'
          environment_name: 'Filesure-next-app-env'
          version_label: ${{ github.sha }}
          region: ${{ secrets.REGION_NAME }}
          deployment_package: filesure-next.zip
